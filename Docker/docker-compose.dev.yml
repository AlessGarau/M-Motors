services:
  motor-m-db-minio:
    image: minio/minio:latest
    container_name: motor-m-db-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - "minio-data:/data"
    networks:
      - motor-m-network

  motor-m-db:
    image: postgres:latest
    container_name: motor-m-db-db
    networks:
      - motor-m-network
    volumes:
      - "motor-m-db-postgres-data:/var/lib/postgresql/data:rw"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=admin
      - POSTGRES_DB=admin
    ports:
      - "800:8000"
    expose:
      - "8000"

  motor-m-api:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.api
    networks:
      - motor-m-network
    ports:
      - "8001:8001"
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8001"
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - POSTGRES_DB=admin
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
    volumes:
      - ../api:/app/api
      - /app/api/__pycache__

  motor-m-front:
    platform: linux/amd64
    build:
      context: ..
      target: build
      dockerfile: Docker/Dockerfile.client
    env_file: ../client/.env
    networks:
      - motor-m-network
    volumes:
      - ../client:/app/client
      - /app/client/node_modules
    ports:
      - "5173:5173"
    command: npm run dev

networks:
  motor-m-network:
    name: motor-m-network

volumes:
  motor-m-db-postgres-data:
  minio-data:
  node_modules:
